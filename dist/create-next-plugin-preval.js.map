{"version":3,"sources":["../src/create-next-plugin-preval.ts"],"names":["createNextPluginPreval","pluginOption","withNextPluginPreval","_nextConfig","normalizedNextConfig","args","nextConfig","webpack","config","options","webpackConfig","rules","module","Error","push","test","loader","require","resolve"],"mappings":";;;;;;;AA2BA,SAASA,sBAAT,CAAgCC,YAAhC,EAAwE;AACtE,WAASC,oBAAT,CAA8BC,WAA9B,EAAwD;AACtD,UAAMC,oBAAoB,GACxB,OAAOD,WAAP,KAAuB,UAAvB,GAAoCA,WAApC,GAAkD,MAAMA,WAAW,IAAI,EADzE;AAGA,WAAO,CAAC,GAAGE,IAAJ,KAAqC;AAC1C,YAAMC,UAAU,GAAGF,oBAAoB,CAAC,GAAGC,IAAJ,CAAvC;AAEA,aAAO,EACL,GAAGC,UADE;AAELC,QAAAA,OAAO,EAAE,CAACC,MAAD,EAAwBC,OAAxB,KAAoD;AAAA;;AAC3D,gBAAMC,aAAa,GAAG,wBAAAJ,UAAU,CAACC,OAAX,iFAAAD,UAAU,EAAWE,MAAX,EAAmBC,OAAnB,CAAV,KAAyCD,MAA/D;AACA,gBAAMG,KAAK,4BAAGD,aAAa,CAACE,MAAjB,0DAAG,sBAAsBD,KAApC;;AAEA,cAAI,CAACA,KAAL,EAAY;AACV,kBAAM,IAAIE,KAAJ,CACJ,wEADI,CAAN;AAGD;;AAEDF,UAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,YAAAA,IAAI,EAAE,qBADG;AAETC,YAAAA,MAAM,EAAEC,OAAO,CAACC,OAAR,CAAgB,UAAhB,CAFC;AAGTT,YAAAA,OAAO,EAAER;AAHA,WAAX;AAMA,iBAAOS,aAAP;AACD;AAnBI,OAAP;AAqBD,KAxBD;AAyBD;;AAED,SAAOR,oBAAP;AACD;;eAEcF,sB","sourcesContent":["interface NextPluginPrevalOptions {\n  tsConfigFile?: string;\n  blackLists?: string[];\n}\n\ninterface WebpackConfig {\n  module?: {\n    rules: any[];\n  };\n  [key: string]: any;\n}\n\ninterface WebpackOptions {\n  buildId: string;\n  dev: boolean;\n  isServer: boolean;\n  defaultLoaders: object;\n  babel: object;\n}\n\ninterface NextConfigValue {\n  webpack?: (config: WebpackConfig, options: WebpackOptions) => WebpackConfig;\n  [key: string]: any;\n}\n\ntype NextConfig = NextConfigValue | ((...args: any[]) => NextConfigValue);\n\nfunction createNextPluginPreval(pluginOption?: NextPluginPrevalOptions) {\n  function withNextPluginPreval(_nextConfig?: NextConfig) {\n    const normalizedNextConfig =\n      typeof _nextConfig === 'function' ? _nextConfig : () => _nextConfig || {};\n\n    return (...args: any[]): NextConfigValue => {\n      const nextConfig = normalizedNextConfig(...args);\n\n      return {\n        ...nextConfig,\n        webpack: (config: WebpackConfig, options: WebpackOptions) => {\n          const webpackConfig = nextConfig.webpack?.(config, options) || config;\n          const rules = webpackConfig.module?.rules;\n\n          if (!rules) {\n            throw new Error(\n              'Next Plugin Preval could not find webpack rules. Please file an issue.'\n            );\n          }\n\n          rules.push({\n            test: /\\.preval\\.(t|j)sx?$/,\n            loader: require.resolve('./loader'),\n            options: pluginOption\n          });\n\n          return webpackConfig;\n        },\n      };\n    };\n  }\n\n  return withNextPluginPreval;\n}\n\nexport default createNextPluginPreval;\n"],"file":"create-next-plugin-preval.js"}